Circuitry
essentials:circuit_wrench
<item>Circuits/$ are redstone devices like Repeaters or Comparators that are low-lag and can do advanced logic compactly, easily, and cheaply.
Place <item>Circuit Wire Plate/$, and use a <item>Circuit Wrench/$ to convert the wire into the selected circuit (this consumes 1 Nether Quartz per circuit). Shift-right-clicking with the <item>Circuit Wrench/$ opens a menu to choose which circuit to place, and which describes each circuit type. Shift-right clicking with a <item>Circuit Wrench/$ on a circuit will rotate that circuit instead (normal <item><link:essentials/wrench>wrenches/$ can still rotate circuits). Example circuits are <item>AND/$, <item>XOR/$, and <item>Multiplication/$, which do what the names suggest.
<item>Circuits/$ that are either adjacent or connected with <item>Wire Plate/$ can transfer redstone values other than the vanilla 0-15 integers, including values up to 1 billion, decimals, and negative numbers.
<item>Circuits/$ themselves can connect directly to vanilla redstone, and a <item>Wire Splice Plate/$ can connect <item>Wire Plate/$ with vanilla redstone. Each <item>Circuit/$ other than <item>Wire Plate/$ and <item>Wire Splice Plate/$ has a two tick delay (1 redstone tick).
While holding a <item>Circuit Wrench/$, all nearby <item>Circuits/$ will display their output signal strength over them. When multiple circuits are outputting on the same <item>Wire Plate/$, the output value <em>farthest from zero/$ will be used (3 wins over 2, -3 wins over 2, 3 wins over -3).
<item>Circuits/$ can be divided into a few categories:
<page|image|reader|Reader circuit|essentials:textures/book/circuit_reader.png>
Basic circuits, like <item>Wire Junction/$ or <item>Constant/$, do not consume nether quartz to place with a <item>Circuit Wrench/$. They do basic tasks and will be part of most circuit setups. <item>Constant circuits/$ accept a constant value to output via UI, and can accept mathematical expressions (like 'pi*(3-2)E-2)'). <item>Reader circuits/$ act like comparators in that they can read inventories and machines. Some modded machines- especially from <link:essentials/welcome#crossroads>Crossroads/$- can output values greater than 15 or non-integers through a <item>Reader Circuit/$.
<page|image|logic|Two AND circuits|essentials:textures/book/circuit_and.png>
Logic circuits, like <item>AND/$ and <item>NOT/$ do the basic logical operations. They consider 0 and negative values false, and any value greater than 0 true. They output 1 for true and 0 for false.
<page|image|math|Quadratic Formula|essentials:textures/book/circuit_math.png>
Math circuits, like <item>Addition/$ and <item>Logarithm/$ do mathematical operations. Any operation with an invalid output (like sqrt(-4)) will output 0 instead.
<page|image|time|Clock circuit output|essentials:textures/book/circuit_timer.png>
Time circuits, like <item>Clock/$ and <item>Delay/$, do things involving redstone pulses. The <item>Clock Circuit/$ creates pulses with a duration and period set via the UI. The <item>Delay Circuit/$ delays any change in the input by a time set via the UI (in redstone ticks, minimum 1), before outputting it. Unlike a vanilla repeater, the <item>Delay Circuit/$ doesn't lengthen pulses or change the signal strength.
Circuits where the symbol in the <item>Circuit Wrench/$ UI is in red have ticking tile entities- while less laggy than vanilla redstone versions of those circuits, they may still create lag when used excessively.